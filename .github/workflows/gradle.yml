# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: make application.properties
      run: |
        cd ./src/main/resources
        touch ./application.properties
        echo "${{secrets.PROPERTIES}}" > ./application.properties
      shell: bash

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Docker build
      run: |
        echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
        docker build --build-arg JAR_FILE=build/libs/spring-boot-develop-1.0.jar -t spring-boot .
        docker tag spring-boot m1npr0/spring-boot:${GITHUB_SHA::7}
        docker push m1npr0/spring-boot:${GITHUB_SHA::7}
        

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.HOST_PROD}}
        username: ${{secrets.USERNAME}}
        password: ${{secrets.PASSWORD}}
        port: 22
        script: |
          cd /root/Spring-Boot
          git pull
          export GITHUB_SHA=$(git rev-parse HEAD)
          echo "Using tag: ${GITHUB_SHA::7}"
          docker pull m1npr0/spring-boot:${GITHUB_SHA::7}
          docker tag m1npr0/spring-boot:${GITHUB_SHA::7} spring-boot
          docker stop server && docker rm server
          docker run -d --name server -p 80:8080 spring-boot
